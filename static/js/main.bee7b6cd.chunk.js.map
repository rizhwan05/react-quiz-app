{"version":3,"sources":["components/Home.js","questions.js","components/ScorePopup.js","components/Quiz.js","App.js","index.js"],"names":["Home","React","createElement","className","Link","to","questions","type","question","options","correctAnswer","ScorePopup","_ref","score","total","onPlayAgain","navigate","useNavigate","id","onClick","handlePlayAgain","Quiz","currentPage","setCurrentPage","useState","userAnswers","setUserAnswers","scorePopup","setScorePopup","timeLeft","setTimeLeft","useEffect","timer","setInterval","prevTime","clearInterval","startIndex","endIndex","handlePageChange","direction","slice","map","index","key","option","optionIndex","name","concat","value","onChange","handleOptionChange","questionIndex","answer","[object Object]","checked","Array","from","length","Math","ceil","_","i","disabled","handleSubmit","floor","calculateScore","forEach","App","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bee7b6cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"heading\">\r\n                <h1>Quiz App</h1>\r\n            </div>\r\n            <div className=\"Rules_box\">\r\n                <div className=\"info-list\">\r\n                    <div className=\"info\">1. You will have only <span>1 minute</span> per each page.</div>\r\n                    <div className=\"info\">2. You can't select any option once time goes off.</div>\r\n                    <div className=\"info\">3. You can't exit from the Quiz while you're playing.</div>\r\n                    <div className=\"info\">4. You'll get points on the basis of your correct answers.</div>\r\n                </div>\r\n                <div className=\"nxt-btn\">\r\n                    <Link to=\"/quiz\"><button className=\"start-btn\">Start Quiz</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","const questions = [\r\n    {\r\n        type: 'radio',\r\n        question: 'What does HTML stand for?',\r\n        options: ['Hyper Text Preprocessor', 'Hyper Text Markup Language', 'Hyper Text Multiple Language', 'Hyper Tool Multi Language'],\r\n        correctAnswer: 'Hyper Text Markup Language'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'What does CSS stand for?',\r\n        options: ['Common Style Sheet', 'Colorful Style Sheet', 'Computer Style Sheet', 'Cascading Style Sheet'],\r\n        correctAnswer: 'Cascading Style Sheet'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'What does PHP stand for?',\r\n        options: ['Hypertext Preprocessor', 'Hypertext Programming', 'Hypertext Preprogramming', 'Hometext Preprocessor'],\r\n        correctAnswer: 'Hypertext Preprocessor'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'What does SQL stand for?',\r\n        options: ['Stylish Question Language', 'Stylesheet Query Language', 'Statement Question Language', 'Structured Query Language'],\r\n        correctAnswer: 'Structured Query Language'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'What does XML stand for?',\r\n        options: ['eXtensible Markup Language', 'eXecutable Multiple Language', 'eXTra Multi-Program Language', 'eXamine Multiple Language'],\r\n        correctAnswer: 'eXtensible Markup Language'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which HTML tag is used to define an internal style sheet?',\r\n        options: ['<style>', '<script>', '<css>', '<link>'],\r\n        correctAnswer: '<style>'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which property is used to change the background color in CSS?',\r\n        options: ['color', 'bgcolor', 'background-color', 'background'],\r\n        correctAnswer: 'background-color'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which CSS property controls the text size?',\r\n        options: ['font-style', 'text-size', 'font-size', 'text-style'],\r\n        correctAnswer: 'font-size'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which built-in method combines the text of two strings and returns a new string?',\r\n        options: ['append()', 'concat()', 'attach()', 'link()'],\r\n        correctAnswer: 'concat()'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which of the following is a valid JavaScript variable name?',\r\n        options: ['2names', 'first-name', '_first_and_last_names', 'first&last'],\r\n        correctAnswer: '_first_and_last_names'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which tag is used to create a hyperlink in HTML?',\r\n        options: ['<link>', '<a>', '<href>', '<hyperlink>'],\r\n        correctAnswer: '<a>'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which attribute is used to specify the destination of a hyperlink in HTML?',\r\n        options: ['src', 'href', 'link', 'dest'],\r\n        correctAnswer: 'href'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which of the following is the correct way to comment in CSS?',\r\n        options: ['// comment', '/* comment */', '<!-- comment -->', '# comment'],\r\n        correctAnswer: '/* comment */'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which built-in method sorts the elements of an array?',\r\n        options: ['changeOrder(order)', 'order()', 'sort()', 'None of the above.'],\r\n        correctAnswer: 'sort()'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which of the following functions is used to parse a string to an integer in JavaScript?',\r\n        options: ['Integer.parse', 'parseInt()', 'parse()', 'None of the above.'],\r\n        correctAnswer: 'parseInt()'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which HTML tag is used to define an ordered list?',\r\n        options: ['<ul>', '<ol>', '<li>', '<list>'],\r\n        correctAnswer: '<ol>'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which method is used to remove the whitespace at the beginning and end of a string?',\r\n        options: ['strip()', 'trim()', 'cut()', 'None of the above.'],\r\n        correctAnswer: 'trim()'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which property is used to change the font of an element in CSS?',\r\n        options: ['font-family', 'font-style', 'font-weight', 'font-size'],\r\n        correctAnswer: 'font-family'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which tag is used to create a line break in HTML?',\r\n        options: ['<break>', '<lb>', '<br>', '<line>'],\r\n        correctAnswer: '<br>'\r\n    },\r\n    {\r\n        type: 'radio',\r\n        question: 'Which of the following is not a reserved word in JavaScript?',\r\n        options: ['interface', 'throws', 'program', 'short'],\r\n        correctAnswer: 'program'\r\n    }\r\n];\r\n\r\nexport default questions;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\n\r\nfunction ScorePopup({ score, total, onPlayAgain }) {\r\n    const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n    const handlePlayAgain = () => {\r\n        // Navigate to the home page\r\n        navigate('/');\r\n        if (onPlayAgain) {\r\n            onPlayAgain(); // Call the provided callback if it exists\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"score-popup\">\r\n            <h2>Your Score</h2>\r\n            <p>You scored: <span id=\"quiz-score\">{score}</span> out of <span id=\"total-score\">{total}</span></p>\r\n            <p>Thank you for taking the quiz!</p>\r\n            <button className=\"play-again-button\" onClick={handlePlayAgain}>Play Again</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScorePopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport questions from '../questions';\r\nimport ScorePopup from './ScorePopup';\r\n\r\nfunction Quiz() {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [userAnswers, setUserAnswers] = useState({});\r\n    const [scorePopup, setScorePopup] = useState(false);\r\n    const [timeLeft, setTimeLeft] = useState(60); // 1 minute for each page\r\n\r\n    const questionsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [currentPage]);\r\n\r\n    const startIndex = (currentPage - 1) * questionsPerPage;\r\n    const endIndex = currentPage * questionsPerPage;\r\n\r\n    const handleOptionChange = (questionIndex, answer) => {\r\n        setUserAnswers({ ...userAnswers, [questionIndex]: answer });\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        let score = 0;\r\n        questions.forEach((question, index) => {\r\n            if (userAnswers[index] === question.correctAnswer) {\r\n                score++;\r\n            }\r\n        });\r\n        return score;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setScorePopup(true);\r\n    };\r\n\r\n    const handlePageChange = (direction) => {\r\n        if (direction === 'next') {\r\n            setCurrentPage(currentPage + 1);\r\n        } else if (direction === 'prev') {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n        setTimeLeft(60);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"quiz-container\">\r\n                {questions.slice(startIndex, endIndex).map((question, index) => (\r\n                    <div key={index} className=\"card\">\r\n                        <div className=\"question\">\r\n                            <h2>{question.question}</h2>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            {question.options.map((option, optionIndex) => (\r\n                                <label key={optionIndex}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={`question${startIndex + index}`}\r\n                                        value={option}\r\n                                        onChange={() => handleOptionChange(startIndex + index, option)}\r\n                                        checked={userAnswers[startIndex + index] === option}\r\n                                    />\r\n                                    {option}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"pagination-container\">\r\n                {Array.from({ length: Math.ceil(questions.length / questionsPerPage) }, (_, i) => (\r\n                    <button\r\n                        key={i}\r\n                        className=\"pagination-button\"\r\n                        onClick={() => setCurrentPage(i + 1)}\r\n                        disabled={currentPage === i + 1}\r\n                    >\r\n                        {i + 1}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"navigation-buttons\">\r\n                <button\r\n                    className=\"nav-button\"\r\n                    onClick={() => handlePageChange('prev')}\r\n                    disabled={currentPage === 1}\r\n                >\r\n                    Previous\r\n                </button>\r\n                {currentPage < Math.ceil(questions.length / questionsPerPage) ? (\r\n                    <button className=\"nav-button\" onClick={() => handlePageChange('next')}>\r\n                        Next\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"submit-button\" onClick={handleSubmit}>\r\n                        Submit\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <div className=\"timer\">\r\n                Time Left: <span className=\"timer-display\">{`${Math.floor(timeLeft / 60)}:${timeLeft % 60 < 10 ? '0' : ''}${timeLeft % 60}`}</span>\r\n            </div>\r\n            {scorePopup && (\r\n                <ScorePopup score={calculateScore()} total={questions.length} onPlayAgain={() => setScorePopup(false)} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Quiz from './components/Quiz';\nimport ScorePopup from './components/ScorePopup';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/quiz\" element={<Quiz />} />\n        <Route path=\"/score\" element={<ScorePopup />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'; // Ensure the path is correct\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}